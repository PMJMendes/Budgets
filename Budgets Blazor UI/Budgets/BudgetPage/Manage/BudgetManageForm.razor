@using FluentValidation
@using Krypton.Budgets.Blazor.UI.Budgets.BudgetPage._Core
@using Krypton.Budgets.Blazor.UI.Users._Common

@inherits ErrorHandlingForm<BudgetsRouter, BudgetModel>

<MudContainer MaxWidth="MaxWidth.False" Class="viewport-container">
    <MudStack Spacing="0" Class="viewport">
        <MudTabs Class="viewport-header mb-4" @bind-ActivePanelIndex="activeTab">
            @switch (Level)
            {
                case SecurityLevel.ASSISTANT:
                    <MudTabPanel Text="@L["BUDGET:MANAGE:TABS:BUDGET:HEADER"]"></MudTabPanel>
                    <MudTabPanel Text="@L["BUDGET:MANAGE:TABS:COSTS:HEADER"]"></MudTabPanel>
                    break;
                case SecurityLevel.ACCOUNTING:
                    <MudTabPanel Text="@L["BUDGET:MANAGE:TABS:BUDGET:HEADER"]"></MudTabPanel>
                    <MudTabPanel Text="@L["BUDGET:MANAGE:TABS:INVOICING:HEADER"]"></MudTabPanel>
                    break;
                default:
                    <MudTabPanel Text="@L["BUDGET:MANAGE:TABS:BUDGET:HEADER"]"></MudTabPanel>
                    <MudTabPanel Text="@L["BUDGET:MANAGE:TABS:COSTS:HEADER"]"></MudTabPanel>
                    <MudTabPanel Text="@L["BUDGET:MANAGE:TABS:INVOICING:HEADER"]"></MudTabPanel>
                    <MudTabPanel Text="@L["BUDGET:MANAGE:TABS:SOURCE:HEADER"]"></MudTabPanel>
                    break;
            }
        </MudTabs>

        <MudContainer MaxWidth="MaxWidth.False" Class="viewport-body">
            @switch (Level)
            {
                case SecurityLevel.ASSISTANT:
                    <BudgetViewer Model="@Model" Class="@ClassForTab(0)" />
                    <CostsForm Model="@Model" Class="@ClassForTab(1)" />
                    break;
                case SecurityLevel.ACCOUNTING:
                    <BudgetViewer Model="@Model" Class="@ClassForTab(0)" />
                    <InvoicesForm Model="@Model" Class="@ClassForTab(1)" />
                    break;
                default:
                    <BudgetProdViewer Model="@Model" Class="@ClassForTab(0)" />
                    <CostsForm Model="@Model" Class="@ClassForTab(1)" />
                    <InvoicesForm Model="@Model" Class="@ClassForTab(2)" />
                    <BudgetViewer Model="@Model" Class="@ClassForTab(3)" />
                    break;
            }
        </MudContainer>
    </MudStack>
</MudContainer>

@code {
    private int activeTab = 1;

    [Parameter]
    public BudgetModel Model { get; set; } = BudgetModel.Empty();

    [CascadingParameter]
    public SecurityLevel Level { get; set; }

    private string ClassForTab(int targetTab) => activeTab == targetTab ? "viewport-container" : "d-none";
}
