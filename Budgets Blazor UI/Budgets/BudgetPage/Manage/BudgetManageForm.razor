@using FluentValidation
@using Krypton.Budgets.Blazor.UI.Budgets.BudgetPage._Core
@using Krypton.Budgets.Blazor.UI.Users._Common

@inherits ErrorHandlingForm<BudgetsRouter, BudgetModel>

<MudContainer Class="full-viewport">
    <MudTabs @bind-ActivePanelIndex="activeTab">
        <MudTabPanel Text="@L["BUDGET:MANAGE:TABS:BUDGET:HEADER"]"></MudTabPanel>
        <MudTabPanel Text="@L["BUDGET:MANAGE:TABS:COSTS:HEADER"]"></MudTabPanel>
        <MudTabPanel Text="@L["BUDGET:MANAGE:TABS:INVOICING:HEADER"]"></MudTabPanel>
        @if (Level == SecurityLevel.ADMIN || Level == SecurityLevel.PRODUCER)
        {
            <MudTabPanel Text="@L["BUDGET:MANAGE:TABS:SOURCE:HEADER"]"></MudTabPanel>
        }
    </MudTabs>

    <MudContainer Class="full-viewport">
        @if (Level == SecurityLevel.ADMIN || Level == SecurityLevel.PRODUCER)
        {
            <BudgetProdViewer Model="@Model" Class="@(activeTab == 0 ? string.Empty : "d-none")" />
            <BudgetViewer Model="@Model" Class="@(activeTab == 3 ? string.Empty : "d-none")" />
        }
        else
        {
            <BudgetViewer Model="@Model" Class="@(activeTab == 0 ? string.Empty : "d-none")" />
        }
        <CostsForm Model="@Model" Class="@(activeTab == 1 ? string.Empty : "d-none")" />
        <InvoicesForm Model="@Model" Class="@(activeTab == 2 ? string.Empty : "d-none")" />
    </MudContainer>
</MudContainer>

@code {
    private int activeTab = 1;

    [Parameter]
    public BudgetModel Model { get; set; } = BudgetModel.Empty();

    [CascadingParameter]
    public SecurityLevel Level { get; set; }
}
